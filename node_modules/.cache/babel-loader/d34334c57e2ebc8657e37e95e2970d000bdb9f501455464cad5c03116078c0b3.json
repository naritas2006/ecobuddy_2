{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rekha Sharma\\\\OneDrive\\\\Documents\\\\ecobuddy\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      // Verify token and get user info\n      verifyToken();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const verifyToken = async () => {\n    try {\n      // For now, we'll just check if token exists\n      // In a real app, you'd verify with the backend\n      if (token) {\n        const userData = localStorage.getItem('user');\n        if (userData) {\n          setUser(JSON.parse(userData));\n        }\n      }\n    } catch (error) {\n      console.error('Token verification failed:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/login', {\n        email,\n        password\n      });\n      const {\n        access_token,\n        user: userData\n      } = response.data;\n      setToken(access_token);\n      setUser(userData);\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Login failed'\n      };\n    }\n  };\n  const register = async (name, email, password, userType = 'Individual') => {\n    try {\n      const response = await axios.post('/register', {\n        name,\n        email,\n        password,\n        user_type: userType\n      });\n      const {\n        access_token,\n        user: userData\n      } = response.data;\n      setToken(access_token);\n      setUser(userData);\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['Authorization'];\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","defaults","headers","common","verifyToken","userData","JSON","parse","error","console","logout","login","email","password","response","post","access_token","data","setItem","stringify","success","_error$response","_error$response$data","detail","register","name","userType","user_type","_error$response2","_error$response2$data","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Rekha Sharma/OneDrive/Documents/ecobuddy/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      // Verify token and get user info\r\n      verifyToken();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  const verifyToken = async () => {\r\n    try {\r\n      // For now, we'll just check if token exists\r\n      // In a real app, you'd verify with the backend\r\n      if (token) {\r\n        const userData = localStorage.getItem('user');\r\n        if (userData) {\r\n          setUser(JSON.parse(userData));\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Token verification failed:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post('/login', { email, password });\r\n      const { access_token, user: userData } = response.data;\r\n      \r\n      setToken(access_token);\r\n      setUser(userData);\r\n      localStorage.setItem('token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.detail || 'Login failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password, userType = 'Individual') => {\r\n    try {\r\n      const response = await axios.post('/register', { \r\n        name, email, password, user_type: userType \r\n      });\r\n      const { access_token, user: userData } = response.data;\r\n      \r\n      setToken(access_token);\r\n      setUser(userData);\r\n      localStorage.setItem('token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.detail || 'Registration failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAACmB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAEjEnB,SAAS,CAAC,MAAM;IACd,IAAIgB,KAAK,EAAE;MACTf,KAAK,CAACmB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUN,KAAK,EAAE;MAClE;MACAO,WAAW,CAAC,CAAC;IACf,CAAC,MAAM;MACLR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACC,KAAK,CAAC,CAAC;EAEX,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF;MACA;MACA,IAAIP,KAAK,EAAE;QACT,MAAMQ,QAAQ,GAAGN,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;QAC7C,IAAIK,QAAQ,EAAE;UACZX,OAAO,CAACY,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC,CAAC;QAC/B;MACF;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDE,MAAM,CAAC,CAAC;IACV,CAAC,SAAS;MACRd,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMe,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,IAAI,CAAC,QAAQ,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MAChE,MAAM;QAAEG,YAAY;QAAEvB,IAAI,EAAEY;MAAS,CAAC,GAAGS,QAAQ,CAACG,IAAI;MAEtDnB,QAAQ,CAACkB,YAAY,CAAC;MACtBtB,OAAO,CAACW,QAAQ,CAAC;MACjBN,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEF,YAAY,CAAC;MAC3CjB,YAAY,CAACmB,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAACd,QAAQ,CAAC,CAAC;MACtDvB,KAAK,CAACmB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUa,YAAY,EAAE;MAEzE,OAAO;QAAEI,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MAAA,IAAAa,eAAA,EAAAC,oBAAA;MACd,OAAO;QACLF,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE,EAAAa,eAAA,GAAAb,KAAK,CAACM,QAAQ,cAAAO,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBJ,IAAI,cAAAK,oBAAA,uBAApBA,oBAAA,CAAsBC,MAAM,KAAI;MACzC,CAAC;IACH;EACF,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAEb,KAAK,EAAEC,QAAQ,EAAEa,QAAQ,GAAG,YAAY,KAAK;IACzE,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,IAAI,CAAC,WAAW,EAAE;QAC7CU,IAAI;QAAEb,KAAK;QAAEC,QAAQ;QAAEc,SAAS,EAAED;MACpC,CAAC,CAAC;MACF,MAAM;QAAEV,YAAY;QAAEvB,IAAI,EAAEY;MAAS,CAAC,GAAGS,QAAQ,CAACG,IAAI;MAEtDnB,QAAQ,CAACkB,YAAY,CAAC;MACtBtB,OAAO,CAACW,QAAQ,CAAC;MACjBN,YAAY,CAACmB,OAAO,CAAC,OAAO,EAAEF,YAAY,CAAC;MAC3CjB,YAAY,CAACmB,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAACd,QAAQ,CAAC,CAAC;MACtDvB,KAAK,CAACmB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUa,YAAY,EAAE;MAEzE,OAAO;QAAEI,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MAAA,IAAAoB,gBAAA,EAAAC,qBAAA;MACd,OAAO;QACLT,OAAO,EAAE,KAAK;QACdZ,KAAK,EAAE,EAAAoB,gBAAA,GAAApB,KAAK,CAACM,QAAQ,cAAAc,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBX,IAAI,cAAAY,qBAAA,uBAApBA,qBAAA,CAAsBN,MAAM,KAAI;MACzC,CAAC;IACH;EACF,CAAC;EAED,MAAMb,MAAM,GAAGA,CAAA,KAAM;IACnBZ,QAAQ,CAAC,IAAI,CAAC;IACdJ,OAAO,CAAC,IAAI,CAAC;IACbK,YAAY,CAAC+B,UAAU,CAAC,OAAO,CAAC;IAChC/B,YAAY,CAAC+B,UAAU,CAAC,MAAM,CAAC;IAC/B,OAAOhD,KAAK,CAACmB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACvD,CAAC;EAED,MAAM4B,KAAK,GAAG;IACZtC,IAAI;IACJkB,KAAK;IACLa,QAAQ;IACRd,MAAM;IACNf;EACF,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAAC+C,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAxC,QAAA,EAChCA;EAAQ;IAAA0C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5C,GAAA,CAhGWF,YAAY;AAAA+C,EAAA,GAAZ/C,YAAY;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}